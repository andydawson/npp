### code to fit the statistical model using NIMBLE

# note - to create an MCMC for a second model within the same R session you may need to give all the related model and MCMC objects new names as overwriting old names may cause problems

source("config")
source('model.R')

load('data/dump/rw_data.rdata')

#tsplot <- function(x) plot(seq_along(x), x, type = 'l')

library(nimble)

# initial model with plot effects
m <- nimbleModel(body(ringModel_plot),
                 constants = list(N_trees = N_trees, 
                                  T = T, 
                                  N_tot = N_tot,
                                  N_cores = N_cores))

m$setData(list(logy = logy))
m$setInits(list(mu    = matrix(.1, N_trees, T),
                sigma = .1))

spec <- configureMCMC(m, thin = 50)
#spec$samplerSpecs[[206]]$control$scale=.01
#spec$addMonitors(c('D', 'X', 'beta_t', 'beta_t_sd', 'beta_sd', 'beta_k', 'beta_k_sd'))

t1 <- proc.time()
Rmcmc <- buildMCMC(spec)
t2 <- proc.time()

cm <- compileNimble(m)
Cmcmc <- compileNimble(Rmcmc, project = m)

# some timing from NIMBLE 0.3-1
# 505 sec for Rmodel (8.5 mins)
# 300 for configureMCMC
# 140 for buildMCMC
# 270 to compile model
# 325 to compile MCMC

Cmcmc$run(10000)#25000)

out <- as.matrix(Cmcmc$mvSamples)#[101:500, ]

save(out, file = 'output/output_ring_PE.Rda')
